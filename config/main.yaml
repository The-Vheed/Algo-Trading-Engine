name: "EUR_USD_Dynamic_Regime"
version: "1.0"

live: true
data_source: "CSV"

api:
  key: "XtejxmiwNHZqDFk"
  app_id: "80720"

backtesting:
  start_date: "2020-01-01"
  end_date: "2024-12-31"
  initial_balance: 10000
  commission_per_lot: 7.0
  spread_pips: 1.2

# ----------------------------------------------------------------------------------
# Strategy Configuration
# ----------------------------------------------------------------------------------
strategy:
  name: "Dynamic Regime Strategy"
  description: "A strategy that adapts to market regimes using multiple indicators and timeframes."
  instruments: ["EUR/USD"]
  timeframes: ["M1", "M5"]

  # ----------------------------------------------------------------------------------
  # 1. INDICATORS BY TIMEFRAME
  # ----------------------------------------------------------------------------------
  indicators:
    M1:
      - name: "regime_adx"
        type: "ADX"
        params: { period: 14 }
      - name: "volatility_bbw"
        type: "BBW"
        params: { period: 20, std_dev: 2.0 }
      - name: "trend_ema_fast"
        type: "EMA"
        params: { period: 50 }
      - name: "trend_ema_slow"
        type: "EMA"
        params: { period: 200 }
    M5:
      - name: "trend_ema_fast"
        type: "EMA"
        params: { period: 20 }
      - name: "trend_ema_slow"
        type: "EMA"
        params: { period: 50 }
      - name: "trend_macd"
        type: "MACD"
        params: { fast: 12, slow: 26, signal: 9 }
      - name: "trend_atr"
        type: "ATR"
        params: { period: 14 }
      - name: "range_stoch"
        type: "STOCH"
        params: { k_period: 14, d_period: 3, smoothing: 3 }
      - name: "range_sr"
        type: "PIVOT"
        params: { method: "classic" }
      - name: "range_atr"
        type: "ATR"
        params: { period: 14 }

  # ----------------------------------------------------------------------------------
  # 2. MARKET REGIME LOGIC
  # ----------------------------------------------------------------------------------
  regime_logic:
    rules:
      - name: "TRENDING"
        conditions:
          - "M1.regime_adx.adx > 25"
          - "M1.volatility_bbw.width.value > M1.volatility_bbw.width.percentile_75"
      - name: "RANGING"
        conditions:
          - "M1.regime_adx.adx < 20"
          - "M1.volatility_bbw.width.value < M1.volatility_bbw.width.percentile_25"
      - name: "NEUTRAL"
        conditions:
          - "default"

  # ----------------------------------------------------------------------------------
  # 3. TRADING LOGIC BY REGIME
  # ----------------------------------------------------------------------------------
  trading_logic:
    TRENDING:
      entries:
        BUY:
          conditions:
            - "M1.trend_ema_fast.value > M1.trend_ema_slow.value"
            - "M5.trend_ema_fast.value > M5.trend_ema_slow.value"
            - "M5.trend_macd.histogram > 0"
            - "price.close > price.open" # Additional bullish confirmation
        SELL:
          conditions:
            - "M1.trend_ema_fast.value < M1.trend_ema_slow.value"
            - "M5.trend_ema_fast.value < M5.trend_ema_slow.value"
            - "M5.trend_macd.histogram < 0"
            - "price.close < price.open" # Additional bearish confirmation
      exits:
        stop_loss:
          method: "ATR"
          indicator: "M5.trend_atr"
          multiplier: 2.0
        take_profits:
          - { method: "risk_reward", ratio: 1.0, action: "partial_close", percent: 50 }
          - { method: "risk_reward", ratio: 2.0, action: "full_close" }

    RANGING:
      entries:
        BUY:
          conditions:
            # Replace vague "near" with specific range check
            - "price.low >= M5.range_sr.S1 * 0.9995" # Within 0.05% below support
            - "price.low <= M5.range_sr.S1 * 1.0005" # Within 0.05% above support
            - "M5.range_stoch.k < 20"
            # Replace vague "candlestick is bullish" with specific conditions
            - "price.close > price.open" # Bullish candle
            - "price.close > price.low + ((price.high - price.low) * 0.6)" # Strong close in upper portion
            - "price.close > price.previous_close" # Higher than previous close
        SELL:
          conditions:
            # Replace vague "near" with specific range check
            - "price.high <= M5.range_sr.R1 * 1.0005" # Within 0.05% above resistance
            - "price.high >= M5.range_sr.R1 * 0.9995" # Within 0.05% below resistance
            - "M5.range_stoch.k > 80"
            # Replace vague "candlestick is bearish" with specific conditions
            - "price.close < price.open" # Bearish candle
            - "price.close < price.high - ((price.high - price.low) * 0.6)" # Strong close in lower portion
            - "price.close < price.previous_close" # Lower than previous close
      exits:
        stop_loss:
          method: "ATR"
          indicator: "M5.range_atr"
          multiplier: 1.5
        take_profits:
          # Primary TP - Target the opposite end of the range with explicit references
          - { 
              method: "level", 
              target: "explicit_level", 
              buy_target: "M5.range_sr.R1",
              sell_target: "M5.range_sr.S1",
              action: "partial_close",
              percent: 75
            }
          # Secondary TP - Based on risk-reward ratio as a backup
          - { 
              method: "risk_reward", 
              ratio: 1.5, 
              action: "full_close" 
            }
          # Mid-range TP for wide ranges with explicit condition
          - { 
              method: "level", 
              target: "mid_level",
              buy_target: "(price.entry + M5.range_sr.R1) / 2",
              sell_target: "(price.entry + M5.range_sr.S1) / 2",
              condition: "(M5.range_sr.R1 - M5.range_sr.S1) > (2.5 * M5.range_atr.value)",
              action: "partial_close", 
              percent: 50 
            }

  # ----------------------------------------------------------------------------------
  # 4. RISK MANAGEMENT
  # ----------------------------------------------------------------------------------
  risk_management:
    # Position Sizing
    position_sizing:
      method: "fixed_fractional"  # Options: fixed_fractional, fixed_lot, volatility_adjusted
      risk_per_trade: 1.0  # Percentage of account equity to risk per trade (0.5-1.5% recommended)
      max_position_size: 5.0  # Maximum position size in lots
      min_position_size: 0.01  # Minimum position size in lots
    
    # Trade Management
    trade_management:
      max_concurrent_trades: 3  # Maximum number of open trades at any time
      allow_opposing_trades: false  # Whether to allow both long and short positions simultaneously
      # neutral_regime_position_scale: 0.5  # Scale position size to 50% in neutral regime
    
    # Drawdown Protection
    drawdown_protection:
      daily_loss_limit:
        enabled: true
        percentage: 3.0  # Stop trading if daily loss exceeds 3% of account equity
      weekly_loss_limit:
        enabled: true
        percentage: 5.0  # Stop trading if weekly loss exceeds 5% of account equity
      monthly_loss_limit:
        enabled: true
        percentage: 10.0  # Stop trading if monthly loss exceeds 10% of account equity
      max_consecutive_losses: 5  # Pause trading after 5 consecutive losses
    
    # Profit Taking & Trade Management
    profit_management:
      breakeven_move:
        enabled: true
        after_reward_ratio: 0.8  # Move SL to breakeven after price moves 0.8x the risk distance
      trailing_stop:
        method: "ATR"  # Options: ATR, fixed, percentage, indicator
        activation: 1.0  # Activate trailing stop after 1.0x risk:reward
        params: {
          multiplier: 2.0,  # For ATR method: 2.0x ATR
          indicator: "H1.trend_atr"  # Which ATR indicator to use
        }
    
    # Time Filters
    time_filters:
      # Avoid trading during major news events
      avoid_news: true
      # Avoid trading during low liquidity periods
      sessions:
        - name: "Asian"
          enabled: false  # Don't trade during Asian session
          start_time: "00:00"
          end_time: "08:00"
        - name: "London"
          enabled: true  # Allow trading during London session
          start_time: "08:00"
          end_time: "16:00"
        - name: "New York"
          enabled: true  # Allow trading during New York session
          start_time: "13:00"
          end_time: "21:00"
